//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Residual.Models.ResidualDBModelContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets88c7915db2d90e1123488cc7ae2ab65fac05a1341fdc30cb0a7a47e0c2354dbf))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets88c7915db2d90e1123488cc7ae2ab65fac05a1341fdc30cb0a7a47e0c2354dbf : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "88c7915db2d90e1123488cc7ae2ab65fac05a1341fdc30cb0a7a47e0c2354dbf"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Action")
            {
                return GetView0();
            }

            if (extentName == "ResidualDBModelContext.Actions")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.Entity")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.EntityType")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.Role")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.Location")
            {
                return GetView5();
            }

            if (extentName == "ResidualDBModelContext.Entities")
            {
                return GetView6();
            }

            if (extentName == "ResidualDBModelContext.EntitiesType")
            {
                return GetView7();
            }

            if (extentName == "ResidualDBModelContext.Roles")
            {
                return GetView8();
            }

            if (extentName == "ResidualDBModelContext.Locations")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.Review")
            {
                return GetView10();
            }

            if (extentName == "ResidualDBModelContext.Reviews")
            {
                return GetView11();
            }

            if (extentName == "CodeFirstDatabase.Service")
            {
                return GetView12();
            }

            if (extentName == "ResidualDBModelContext.Services")
            {
                return GetView13();
            }

            if (extentName == "CodeFirstDatabase.ServiceType")
            {
                return GetView14();
            }

            if (extentName == "ResidualDBModelContext.ServicesTypes")
            {
                return GetView15();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Action.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Action
        [CodeFirstDatabaseSchema.Action](T1.Action_ID, T1.Action_Name, T1.Action_IDrole)
    FROM (
        SELECT 
            T.ID AS Action_ID, 
            T.Name AS Action_Name, 
            T.IDrole AS Action_IDrole, 
            True AS _from0
        FROM ResidualDBModelContext.Actions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ResidualDBModelContext.Actions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Actions
        [Residual.Models.Action](T1.Action_ID, T1.Action_Name, T1.Action_IDrole)
    FROM (
        SELECT 
            T.ID AS Action_ID, 
            T.Name AS Action_Name, 
            T.IDrole AS Action_IDrole, 
            True AS _from0
        FROM CodeFirstDatabase.Action AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Entity.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Entity
        [CodeFirstDatabaseSchema.Entity](T1.Entity_ID, T1.Entity_EntityTypeID, T1.Entity_Name, T1.Entity_Contact, T1.Entity_BirthDate, T1.Entity_Gender, T1.Entity_Adress, T1.Entity_LocationID)
    FROM (
        SELECT 
            T.ID AS Entity_ID, 
            T.EntityTypeID AS Entity_EntityTypeID, 
            T.Name AS Entity_Name, 
            T.Contact AS Entity_Contact, 
            T.BirthDate AS Entity_BirthDate, 
            T.Gender AS Entity_Gender, 
            T.Adress AS Entity_Adress, 
            T.LocationID AS Entity_LocationID, 
            True AS _from0
        FROM ResidualDBModelContext.Entities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.EntityType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EntityType
        [CodeFirstDatabaseSchema.EntityType](T1.EntityType_ID, T1.EntityType_Name, T1.EntityType_RoleID)
    FROM (
        SELECT 
            T.ID AS EntityType_ID, 
            T.Name AS EntityType_Name, 
            T.RoleID AS EntityType_RoleID, 
            True AS _from0
        FROM ResidualDBModelContext.EntitiesType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Role.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Role
        [CodeFirstDatabaseSchema.Role](T1.Role_ID, T1.Role_Name)
    FROM (
        SELECT 
            T.ID AS Role_ID, 
            T.Name AS Role_Name, 
            True AS _from0
        FROM ResidualDBModelContext.Roles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Location.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Location
        [CodeFirstDatabaseSchema.Location](T1.Location_ID, T1.Location_LocationName)
    FROM (
        SELECT 
            T.ID AS Location_ID, 
            T.LocationName AS Location_LocationName, 
            True AS _from0
        FROM ResidualDBModelContext.Locations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ResidualDBModelContext.Entities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Entities
        [Residual.Models.Entity](T1.Entity_ID, T1.Entity_EntityTypeID, T1.Entity_Name, T1.Entity_Contact, T1.Entity_BirthDate, T1.Entity_Gender, T1.Entity_Adress, T1.Entity_LocationID)
    FROM (
        SELECT 
            T.ID AS Entity_ID, 
            T.EntityTypeID AS Entity_EntityTypeID, 
            T.Name AS Entity_Name, 
            T.Contact AS Entity_Contact, 
            T.BirthDate AS Entity_BirthDate, 
            T.Gender AS Entity_Gender, 
            T.Adress AS Entity_Adress, 
            T.LocationID AS Entity_LocationID, 
            True AS _from0
        FROM CodeFirstDatabase.Entity AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ResidualDBModelContext.EntitiesType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EntitiesType
        [Residual.Models.EntityType](T1.EntityType_ID, T1.EntityType_Name, T1.EntityType_RoleID)
    FROM (
        SELECT 
            T.ID AS EntityType_ID, 
            T.Name AS EntityType_Name, 
            T.RoleID AS EntityType_RoleID, 
            True AS _from0
        FROM CodeFirstDatabase.EntityType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ResidualDBModelContext.Roles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Roles
        [Residual.Models.Role](T1.Role_ID, T1.Role_Name)
    FROM (
        SELECT 
            T.ID AS Role_ID, 
            T.Name AS Role_Name, 
            True AS _from0
        FROM CodeFirstDatabase.Role AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ResidualDBModelContext.Locations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Locations
        [Residual.Models.Location](T1.Location_ID, T1.Location_LocationName)
    FROM (
        SELECT 
            T.ID AS Location_ID, 
            T.LocationName AS Location_LocationName, 
            True AS _from0
        FROM CodeFirstDatabase.Location AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Review.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Review
        [CodeFirstDatabaseSchema.Review](T1.Review_ID, T1.Review_IDentityReviwer, T1.Review_IDentityReviwed, T1.Review_content, T1.Review_CreationDate, T1.Review_Rating, T1.Review_Seen)
    FROM (
        SELECT 
            T.ID AS Review_ID, 
            T.IDentityReviwer AS Review_IDentityReviwer, 
            T.IDentityReviwed AS Review_IDentityReviwed, 
            T.content AS Review_content, 
            T.CreationDate AS Review_CreationDate, 
            T.Rating AS Review_Rating, 
            T.Seen AS Review_Seen, 
            True AS _from0
        FROM ResidualDBModelContext.Reviews AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ResidualDBModelContext.Reviews.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Reviews
        [Residual.Models.Review](T1.Review_ID, T1.Review_IDentityReviwer, T1.Review_IDentityReviwed, T1.Review_content, T1.Review_CreationDate, T1.Review_Rating, T1.Review_Seen)
    FROM (
        SELECT 
            T.ID AS Review_ID, 
            T.IDentityReviwer AS Review_IDentityReviwer, 
            T.IDentityReviwed AS Review_IDentityReviwed, 
            T.content AS Review_content, 
            T.CreationDate AS Review_CreationDate, 
            T.Rating AS Review_Rating, 
            T.Seen AS Review_Seen, 
            True AS _from0
        FROM CodeFirstDatabase.Review AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Service.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Service
        [CodeFirstDatabaseSchema.Service](T1.Service_ID, T1.Service_IDserviceType, T1.Service_IDentityRequesting, T1.Service_IDentityReceiving)
    FROM (
        SELECT 
            T.ID AS Service_ID, 
            T.IDserviceType AS Service_IDserviceType, 
            T.IDentityRequesting AS Service_IDentityRequesting, 
            T.IDentityReceiving AS Service_IDentityReceiving, 
            True AS _from0
        FROM ResidualDBModelContext.Services AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ResidualDBModelContext.Services.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Services
        [Residual.Models.Service](T1.Service_ID, T1.Service_IDserviceType, T1.Service_IDentityRequesting, T1.Service_IDentityReceiving)
    FROM (
        SELECT 
            T.ID AS Service_ID, 
            T.IDserviceType AS Service_IDserviceType, 
            T.IDentityRequesting AS Service_IDentityRequesting, 
            T.IDentityReceiving AS Service_IDentityReceiving, 
            True AS _from0
        FROM CodeFirstDatabase.Service AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ServiceType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ServiceType
        [CodeFirstDatabaseSchema.ServiceType](T1.ServiceType_ID, T1.ServiceType_Name, T1.ServiceType_Description)
    FROM (
        SELECT 
            T.ID AS ServiceType_ID, 
            T.Name AS ServiceType_Name, 
            T.Description AS ServiceType_Description, 
            True AS _from0
        FROM ResidualDBModelContext.ServicesTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ResidualDBModelContext.ServicesTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ServicesTypes
        [Residual.Models.ServiceType](T1.ServiceType_ID, T1.ServiceType_Name, T1.ServiceType_Description)
    FROM (
        SELECT 
            T.ID AS ServiceType_ID, 
            T.Name AS ServiceType_Name, 
            T.Description AS ServiceType_Description, 
            True AS _from0
        FROM CodeFirstDatabase.ServiceType AS T
    ) AS T1");
        }
    }
}
